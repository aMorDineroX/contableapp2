// This is your Prisma schema file,

enum UserRole {
  ADMIN
  ACCOUNTANT
  USER
}

model User {
  id         String     @id @default(cuid())
  email      String     @unique
  password   String
  name       String?
  company    Company?   @relation(fields: [companyId], references: [id])
  companyId  String?
  exercises  Exercise[] // Ajout de la relation inverse
  accounts   Account[]
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}

model Exercise {
  id         String    @id @default(cuid())
  name       String
  startDate  DateTime
  endDate    DateTime
  isClosed   Boolean   @default(false)
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  accounts   Account[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Account {
  id         String    @id @default(cuid())
  code       String    // SYSCOHADA account code
  name       String
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  exerciseId String
  exercise   Exercise  @relation(fields: [exerciseId], references: [id])
}

model Company {
  id       String    @id @default(cuid())
  name     String
  users    User[]
  entries  Entry[]
}

model Entry {
  id        String   @id @default(cuid())
  date      DateTime
  account   String
  debit     Float
  credit    Float
  label     String
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
}

// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
